[{"/home/urja/breaking-bad/src/index.tsx":"1","/home/urja/breaking-bad/src/reportWebVitals.ts":"2","/home/urja/breaking-bad/src/App.tsx":"3","/home/urja/breaking-bad/src/components/Home-page.tsx":"4","/home/urja/breaking-bad/src/components/Character-page.tsx":"5","/home/urja/breaking-bad/src/utility-functions/api-calls.tsx":"6","/home/urja/breaking-bad/src/components/Filter.tsx":"7","/home/urja/breaking-bad/src/components/Pagination.tsx":"8","/home/urja/breaking-bad/src/components/Character-cards.tsx":"9"},{"size":500,"mtime":1608630346168,"results":"10","hashOfConfig":"11"},{"size":425,"mtime":1608630346172,"results":"12","hashOfConfig":"11"},{"size":570,"mtime":1608660757231,"results":"13","hashOfConfig":"11"},{"size":2240,"mtime":1608746173473,"results":"14","hashOfConfig":"11"},{"size":2726,"mtime":1608747565353,"results":"15","hashOfConfig":"11"},{"size":1733,"mtime":1608738010861,"results":"16","hashOfConfig":"11"},{"size":2589,"mtime":1608746162077,"results":"17","hashOfConfig":"11"},{"size":2201,"mtime":1608746257761,"results":"18","hashOfConfig":"11"},{"size":2298,"mtime":1608747541889,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1s7c6wh",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/urja/breaking-bad/src/index.tsx",[],["44","45"],"/home/urja/breaking-bad/src/reportWebVitals.ts",[],"/home/urja/breaking-bad/src/App.tsx",[],"/home/urja/breaking-bad/src/components/Home-page.tsx",["46","47","48"],"import React, { useEffect, useState } from 'react';\nimport '../css/Home-page.css';\nimport * as apiCalls from '../utility-functions/api-calls';\nimport PaginationBar from './Pagination';\nimport Filter from './Filter';\nimport CharacterCardsSet from './Character-cards';\nimport {Character} from './Character-cards';\n\nconst HomePage : React.FunctionComponent = () => {\n    const [isFilterApplied, applyFilter] = useState(false);\n    const [filterApplied, changeAppliedFilter] = useState(0);\n    const [limitOnOnePage, changeLimit] = useState(10);\n    const [startIndex, updateStartIndex] = useState(0);\n    const [characterList, updateCharacterList] = useState<Character[]>([]);\n    const [currentPageCharacter, updateCurrentPageCharacter] = useState<Character[]>([]);\n\n    useEffect(() => {\n        (async function() {\n            const data = await apiCalls.getCharacterList(isFilterApplied, filterApplied);\n            updateCharacterList(data);\n            const endIndex: number = ((startIndex + 10) <= data.length) ? startIndex + 9 : data.length - 1;\n            const newCharacterList = data.slice(startIndex,endIndex);\n            updateCurrentPageCharacter(newCharacterList);\n        })();\n    }, [startIndex]);\n\n    useEffect(() => {\n        (async function() {\n            const data = await apiCalls.getCharacterList(isFilterApplied, filterApplied);\n            updateCharacterList(data);\n            updateStartIndex(0);\n            const endIndex = (10 <= data.length) ? 10 : data.length;\n            const newCharacterList = data.slice(startIndex, endIndex);\n            updateCurrentPageCharacter(newCharacterList);\n        })();\n    }, [filterApplied]);\n\n    return (\n        <div className = 'Home-page'>\n            <div className = 'Home-page-header'>\n                Breaking Bad\n            </div>\n            <div className = 'Taskbar'>\n                <PaginationBar characterCount = {characterList.length} limitOnOnePage = {limitOnOnePage} updateStartIndex = {updateStartIndex} />\n                <Filter applyFilter = {applyFilter} changeAppliedFilter = {changeAppliedFilter} />\n            </div>\n            <CharacterCardsSet characterList = {currentPageCharacter} />\n        </div>\n    )\n}\n\nexport default HomePage;","/home/urja/breaking-bad/src/components/Character-page.tsx",["49"],"/home/urja/breaking-bad/src/utility-functions/api-calls.tsx",["50","51","52"],"import React from 'react';\n\nconst baseURL: string = 'https://www.breakingbadapi.com/api/';\n\nexport async function getCharacterList(isFilterApplied: boolean, filterApplied: number) {\n    let urlExtension: string = baseURL + 'characters';\n\n    if(isFilterApplied) {\n        urlExtension += '?category=';\n        if(filterApplied == 1) {\n            urlExtension += 'Breaking+Bad';\n        }\n        else if(filterApplied == 2) {\n            urlExtension += 'Better+Call+Saul';\n        }\n    }\n    try {\n        const res = await fetch(urlExtension);\n\n        if(!res.ok) {\n            throw new Error('Error while fetching data.');\n        }\n\n        const response = await res.json();\n        console.log('character fetched',response);\n        return response;\n    } catch (error) {\n        alert(error);\n    }\n}\n\nexport async function getCharacterByName(name: string) {\n    \n    let urlExtension: string = baseURL + 'characters?name=' + name;\n\n    console.log('url=',urlExtension);\n\n    try {\n        const res = await fetch(urlExtension);\n\n        if(!res.ok) {\n            throw new Error('Error while fetching data.');\n        }\n\n        const response = await res.json();\n        console.log('inapi',response);\n        return response;\n    } catch (error) {\n        alert(error);\n    }\n}\n\nexport async function getQuotesByAuthor(author: string) {\n    \n    let urlExtension: string = baseURL + 'quote?author=' + author;\n\n    try {\n        const res = await fetch(urlExtension);\n\n        if(!res.ok) {\n            throw new Error('Error while fetching data.');\n        }\n\n        const response = await res.json();\n        console.log('quotes',response);\n        return response;\n    } catch (error) {\n        alert(error);\n    }\n}",["53","54"],"/home/urja/breaking-bad/src/components/Filter.tsx",["55","56","57","58","59","60"],"import React, {useState} from 'react';\nimport '../css/Filter.css';\nimport {Button, Modal} from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\ninterface FilterProps {\n    applyFilter: (isFilterApplied: boolean) => void; \n    changeAppliedFilter: (filterApplied: number) => void;\n}\n\nconst Filter: React.FunctionComponent<FilterProps> = (props: FilterProps) => {\n\n    const [show, setShow] = useState(false);\n    const [selected, changeSelected] = useState(3);\n\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    let selectedCategory: number;\n\n    const handleClick = (category: number) => {\n        selectedCategory = category;\n        changeSelected(category);\n    }\n\n    const handleSave = () => {\n        if(typeof(selectedCategory) == 'undefined') {\n            return;\n        }\n        if(selectedCategory) {\n            props.applyFilter(true);\n        }\n        else {\n            props.applyFilter(false);\n        }\n        props.changeAppliedFilter(selectedCategory);\n        setShow(false);\n    }\n\n    return (\n        <>\n        <Button className = 'Filter-button' onClick={handleShow}>\n          Filter\n        </Button>\n  \n        <Modal\n          show={show}\n          onHide={handleClose}\n          backdrop=\"static\"\n          keyboard={false}\n        >\n          <Modal.Header style ={{justifyContent: 'center'}}>\n            <Modal.Title className = 'Title'>Filter</Modal.Title>\n          </Modal.Header>\n          <Modal.Body className = 'Body'>\n                <Button className = 'Option' style = {{backgroundColor: (selected == 1)? '#6b5e62': '#c9f0ff', color: (selected == 1)? 'white': 'black'}} onClick= {handleClick.bind(this,1)} >Breaking Bad</Button>\n                <Button className = 'Option' style = {{backgroundColor: (selected == 2)? '#6b5e62': '#c9f0ff', color: (selected == 1)? 'white': 'black'}} onClick = {handleClick.bind(this,2)} >Better Call Saul</Button>\n                <Button className = 'Option' style = {{backgroundColor: (selected == 0)? '#6b5e62': '#c9f0ff', color: (selected == 1)? 'white': 'black'}} onClick = {handleClick.bind(this,0)} >None</Button>\n          </Modal.Body>\n          <Modal.Footer className = 'Footer'>\n            <Button className = 'Cancel-button' variant=\"secondary\" onClick = {handleClose} >\n                Cancel\n            </Button>\n            <Button className = 'Save-button' variant=\"primary\" onClick = {handleSave} >\n                Save\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </>\n    )\n}\n\nexport default Filter;","/home/urja/breaking-bad/src/components/Pagination.tsx",["61","62","63","64","65","66"],"import React, {useState, useEffect} from 'react';\nimport Pagination from 'react-bootstrap/Pagination';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\ninterface PaginationBarProps {\n    characterCount: number;\n    limitOnOnePage: number;\n    updateStartIndex: (startIndex: number) => void\n}\n\nconst PaginationBar: React.FunctionComponent<PaginationBarProps> = (props:PaginationBarProps) => {\n\n    const [currentPage, updateCurrentPage] = useState(1);\n\n    const noOfPages: number = Math.ceil(props.characterCount / props.limitOnOnePage);\n\n    const handleClick = (pageNumber: number) => {\n        if(pageNumber < 1) pageNumber = 1;\n        else if(pageNumber > noOfPages) pageNumber = noOfPages;\n        updateCurrentPage(pageNumber);\n        const startIndex: number = 10 * (pageNumber - 1);\n        props.updateStartIndex(startIndex);\n    }\n\n    const fetchPages = () => {\n        let pages: number[] = [];\n\n        if(currentPage == 1) {\n            pages.push(1);\n            if(noOfPages == 1) return pages;\n            pages.push(2);\n            if(noOfPages == 2) return pages;\n            pages.push(3);\n        }\n\n        else {\n            pages.push(currentPage - 1);\n            pages.push(currentPage);\n            if(noOfPages == currentPage) return pages;\n            pages.push(currentPage + 1);\n        }\n\n        return pages;\n    }\n\n    let pages: number[] = fetchPages();\n\n    let pageBlock: JSX.Element[] = [];\n\n    pages.map((page, index) => {\n        pageBlock.push(<Pagination.Item className = 'Page-unit' onClick = {handleClick.bind(this,page)} >{page}</Pagination.Item>)\n    })\n\n    return (\n        <>\n        <Pagination className = 'Pagination-bar-final' size = 'lg'>\n            <Pagination.First className = 'Page-unit' onClick = {handleClick.bind(this,1)} />\n            <Pagination.Prev className = 'Page-unit' onClick = {handleClick.bind(this,currentPage - 1)} />\n            {pageBlock}\n            <Pagination.Next className = 'Page-unit' onClick = {handleClick.bind(this,currentPage + 1)} />\n            <Pagination.Last className = 'Page-unit' onClick = {handleClick.bind(this,noOfPages)} />\n        </Pagination>\n        </>\n    )\n}\n\nexport default PaginationBar;","/home/urja/breaking-bad/src/components/Character-cards.tsx",[],{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","severity":1,"message":"72","line":12,"column":28,"nodeType":"73","messageId":"74","endLine":12,"endColumn":39},{"ruleId":"75","severity":1,"message":"76","line":25,"column":8,"nodeType":"77","endLine":25,"endColumn":20,"suggestions":"78"},{"ruleId":"75","severity":1,"message":"79","line":36,"column":8,"nodeType":"77","endLine":36,"endColumn":23,"suggestions":"80"},{"ruleId":"81","severity":1,"message":"82","line":77,"column":21,"nodeType":"83","endLine":77,"endColumn":50},{"ruleId":"71","severity":1,"message":"84","line":1,"column":8,"nodeType":"73","messageId":"74","endLine":1,"endColumn":13},{"ruleId":"85","severity":1,"message":"86","line":10,"column":26,"nodeType":"87","messageId":"88","endLine":10,"endColumn":28},{"ruleId":"85","severity":1,"message":"86","line":13,"column":31,"nodeType":"87","messageId":"88","endLine":13,"endColumn":33},{"ruleId":"67","replacedBy":"89"},{"ruleId":"69","replacedBy":"90"},{"ruleId":"85","severity":1,"message":"86","line":56,"column":83,"nodeType":"87","messageId":"88","endLine":56,"endColumn":85},{"ruleId":"85","severity":1,"message":"86","line":56,"column":129,"nodeType":"87","messageId":"88","endLine":56,"endColumn":131},{"ruleId":"85","severity":1,"message":"86","line":57,"column":83,"nodeType":"87","messageId":"88","endLine":57,"endColumn":85},{"ruleId":"85","severity":1,"message":"86","line":57,"column":129,"nodeType":"87","messageId":"88","endLine":57,"endColumn":131},{"ruleId":"85","severity":1,"message":"86","line":58,"column":83,"nodeType":"87","messageId":"88","endLine":58,"endColumn":85},{"ruleId":"85","severity":1,"message":"86","line":58,"column":129,"nodeType":"87","messageId":"88","endLine":58,"endColumn":131},{"ruleId":"71","severity":1,"message":"91","line":1,"column":26,"nodeType":"73","messageId":"74","endLine":1,"endColumn":35},{"ruleId":"85","severity":1,"message":"86","line":28,"column":24,"nodeType":"87","messageId":"88","endLine":28,"endColumn":26},{"ruleId":"85","severity":1,"message":"86","line":30,"column":26,"nodeType":"87","messageId":"88","endLine":30,"endColumn":28},{"ruleId":"85","severity":1,"message":"86","line":32,"column":26,"nodeType":"87","messageId":"88","endLine":32,"endColumn":28},{"ruleId":"85","severity":1,"message":"86","line":39,"column":26,"nodeType":"87","messageId":"88","endLine":39,"endColumn":28},{"ruleId":"92","severity":1,"message":"93","line":50,"column":29,"nodeType":"94","messageId":"95","endLine":50,"endColumn":31},"no-native-reassign",["96"],"no-negated-in-lhs",["97"],"@typescript-eslint/no-unused-vars","'changeLimit' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'filterApplied' and 'isFilterApplied'. Either include them or remove the dependency array.","ArrayExpression",["98"],"React Hook useEffect has missing dependencies: 'isFilterApplied' and 'startIndex'. Either include them or remove the dependency array.",["99"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'React' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["96"],["97"],"'useEffect' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation",{"desc":"100","fix":"101"},{"desc":"100","fix":"102"},"Update the dependencies array to be: [filterApplied, isFilterApplied, startIndex]",{"range":"103","text":"104"},{"range":"105","text":"104"},[1201,1213],"[filterApplied, isFilterApplied, startIndex]",[1648,1663]]